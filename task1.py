"""
Решение системы
x^2+y^2=1
y=tan(x)
"""

"""
Графически локализуем корни
Получаем
x_1 = [0.6 , 0.7]
y_1 = [0.7, 0.8]

Искать будем только один корень в этом интервале, так как в виду специфики
уравнений, если (x*, y*) является корнем, то (-x*,-y*) также является корнем
"""

"""
Выберем следующее выражение

x= arctan(y) = p_1
y = sqrt(1-x^2) = p_2

Так как частная производная p_1 по х равна нулю, а по у равна 1/(1+y^2), то
номра матрицы будет меньше единицы, а значит метод простой итерации будет сходиться
"""

"""
Оценка числа необходимых итераций, k>=log_q(1-q)*eps
При q = 2/3 и eps = 1e-6
"""
import numpy as np
def get_next_point(x,y):
    return np.arctan(y), np.sqrt(1-x**2)

x= 0.6
y=0.7
xes =[]
yes = []
xes.append(x)
yes.append(y)
for _ in range(35):
    x,y = get_next_point(x,y)
    xes.append(x)
    yes.append(y)

# plt.scatter(xes,yes)
# plt.show()
print("Проверка полученного значения")
print(x**2+y**2-1)
print(y - np.tan(x))
print("~~~~~~~~~~~~~~~~~~")

print("Ответ,",[x,y], [-x,-y])
